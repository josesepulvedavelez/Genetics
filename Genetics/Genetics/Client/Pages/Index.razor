@page "/"
@using Genetics.Shared;
@using Genetics.Shared.Models;
@inject HttpClient Http

<PageTitle>Animals</PageTitle>

<h1>Animals</h1>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" PageSize="10" AllowPaging="true" FilterMode="FilterMode.Advanced" AllowSorting="true"
                Data="@lstAnimals" TItem="Animal" ColumnWidth="150px"
                LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="No se encontraron registros.">
    <Columns>
        <RadzenDataGridColumn TItem="Animal" Property="Name" Title="Name" />
        <RadzenDataGridColumn TItem="Animal" Property="Breed" Title="Breed" />
        <RadzenDataGridColumn TItem="Animal" Property="Breed" Title="BirthDate" />
        <RadzenDataGridColumn TItem="Animal" Property="Breed" Title="Sex" />
        <RadzenDataGridColumn TItem="Animal" Property="Breed" Title="Price" />
        <RadzenDataGridColumn TItem="Animal" Property="Breed" Title="Status" />
    </Columns>
</RadzenDataGrid>

@code {
    private IEnumerable<Animal> lstAnimals = new List<Animal>();

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<IEnumerable<Animal>>("/api/Animals/GetAnimal");
        if (response != null)
        {
            lstAnimals = response;
        }
    }
}